{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/NavBar/NavBar.js","webpack:///./src/components/PageTemplate/PageTemplate.js","webpack:///./src/components/PageTemplate/index.js"],"names":["NotFoundPage","siteTitle","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_PageTemplate__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NavBar","react_default","className","styles","navbar","gatsby_browser_entry","to","PageTemplate","children","pageTemp","components_NavBar_NavBar","Date","getFullYear","href","components_PageTemplate_PageTemplate"],"mappings":"+KAkBeA,UAbM,WAAM,IAEnBC,WADgBC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcC,kBAAeT,MAAMS,SAAUL,MAAOL,GAClDM,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKN,MAAM,mBACXC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yDAOC,IAAMI,EAAS,kCCpBtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAb,EAAAa,EAAAC,EAAAF,GAAAG,EAAAF,EAAA,IAAAG,EAAAH,EAAAC,EAAAC,GAAAF,EAAAI,EAAAC,EAAA,sBAAAF,EAAAf,IAAAY,EAAA,KAAAA,EAAA,GAcyBM,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAAC,GAAiC,IAA9BpB,EAA8BoB,EAA9BpB,SAAUqB,EAAoBD,EAApBC,cACpC,OAAKA,EAGEJ,IAAMnB,cAAcwB,IAApBC,OAAAC,OAAA,CACLxB,WACAqB,iBACGA,EAAcI,OALV,uFCKX,SAASC,EAATN,GAAiD,IAAlCO,EAAkCP,EAAlCO,YAAaC,EAAqBR,EAArBQ,KAAMC,EAAeT,EAAfS,KAAMlC,EAASyB,EAATzB,MAC9BF,EADuCqC,EAAAtC,KACvCC,KAcFsC,EAAkBJ,GAAelC,EAAKC,aAAaiC,YAEzD,OAEEK,EAAAnC,EAAAC,cAACmC,EAAApC,EAAD,CACEqC,eAAgB,CACdN,QAEFjC,MAAOA,EACPwC,cAAa,QAAU1C,EAAKC,aAAaC,MACzCkC,KAAM,CACJ,CACEO,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS1C,GAEX,CACE2C,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS5C,EAAKC,aAAa6C,QAE7B,CACEH,KAAI,gBACJC,QAAS1C,GAEX,CACEyC,KAAI,sBACJC,QAASN,IAEXS,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED,kVC/DAgB,EApBA,SAAAnD,GACb,OACEoD,EAAA9C,EAAAC,cAAA,OAAK8C,UAAWC,IAAOC,QACrBH,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAACiD,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFL,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAACiD,EAAA,EAAD,CAAMC,GAAG,WAAT,YAEFL,EAAA9C,EAAAC,cAAA,UACE6C,EAAA9C,EAAAC,cAACiD,EAAA,EAAD,CAAMC,GAAG,QAAT,+BCWKC,iBAnBM,SAAA1D,GAAS,IACpB2D,EAAa3D,EAAb2D,SACR,OACEP,EAAA9C,EAAAC,cAAA,OAAK8C,UAAWC,IAAOM,UACrBR,EAAA9C,EAAAC,cAAA,cACE6C,EAAA9C,EAAAC,cAAA,qCACA6C,EAAA9C,EAAAC,cAAA,YAEF6C,EAAA9C,EAAAC,cAACsD,EAAD,MACAT,EAAA9C,EAAAC,cAAA,YAAOoD,GACPP,EAAA9C,EAAAC,cAAA,oBACK,IAAIuD,MAAOC,cADhB,mBAGEX,EAAA9C,EAAAC,cAAA,KAAGyD,KAAK,4BAAR,cCrBR9C,EAAAI,EAAAC,EAAA,sBAAA0C","file":"component---src-pages-404-js-942ac282282b54fe710b.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => {\n  const { data } = this.props;\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <PageTemplate location={this.props.location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist ðŸ˜•</p>\n    </PageTemplate>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    // dynamically set head of HTML easily with react-helmet\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"gatsby\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <nav className={styles.navbar}>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"contact\">Contact</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"blog\">Blog!</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Navbar from \"../NavBar\";\r\nimport styles from \"./PageTemplate.module.css\";\r\nimport \"typeface-slabo-27px\";\r\nimport \"typeface-staatliches\";\r\n\r\n// Wraps every page with header, navbar, and footer\r\n// Main contains actual page components\r\nconst PageTemplate = props => {\r\n  const { children } = props;\r\n  return (\r\n    <div className={styles.pageTemp}>\r\n      <header>\r\n        <h1>John Alexander Ferguson</h1>\r\n        <hr></hr>\r\n      </header>\r\n      <Navbar />\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n","export { default } from \"./PageTemplate\";\r\n"],"sourceRoot":""}